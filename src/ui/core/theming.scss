@use 'sass:color';
@use 'sass:math';
@use 'sass:map';

// 
@function calculate-opacity($color, $base-opacity) {
    $lightness: color.channel($color, "lightness", $space: hsl);

    @if $lightness >90 {
        @return $base-opacity * 0.8;
    }

    @return $base-opacity * 1;
}

// 
@function get-contrast-color($color) {
    $lightness: color.channel($color, "lightness", $space: hsl);

    @if $lightness >60 {
        @return var(--background);
    }

    @else {
        @return var(--foreground);
    }
}

// 
@function generate-color-variations($color, $options) {
    $base-background-opacity: 0.1;
    $hover-background-opacity: 0.2;
    $base-border-opacity: 0.2;
    $hover-border-opacity: 0.4;

    @return ('base': $color,
        'hover': color.adjust($color, $lightness: -10%),
        'subtle-bg': color.change($color, $alpha: calculate-opacity($color, $base-background-opacity)),
        'subtle-bg-hover': color.change($color, $alpha: calculate-opacity($color, $hover-background-opacity)),
        'subtle-border': color.change($color, $alpha: calculate-opacity($color, $base-border-opacity)),
        'subtle-border-hover': color.change($color, $alpha: calculate-opacity($color, $hover-border-opacity)),
        'text-over': get-contrast-color($color),
        'text-over-subtle': if(map.get($options, 'tint-over-subtle'), color.adjust($color, $lightness: 30%), inherit));
}

// 
@mixin generate-palette($theme-colors, $foreground, $background, $options: ()) {
    $default-options: (
        'tint-over-subtle': false
    );

$options: map.merge($default-options, $options);

@each $name, $color in $theme-colors {
    $variations: generate-color-variations($color, $options);

    --#{$name}: #{map.get($variations, 'base')};
    --#{$name}-hover: #{map.get($variations, 'hover')};
    --subtle-#{$name}-background: #{map.get($variations, 'subtle-bg')};
    --subtle-#{$name}-background-hover: #{map.get($variations, 'subtle-bg-hover')};
    --subtle-#{$name}-border: #{map.get($variations, 'subtle-border')};
    --subtle-#{$name}-border-hover: #{map.get($variations, 'subtle-border-hover')};
    --#{$name}-text-over: #{map.get($variations, 'text-over')};
    --#{$name}-text-over-subtle: #{map.get($variations, 'text-over-subtle')};

    .outline-#{$name},
    .surface-#{$name} {
        border: 1px solid var(--subtle-#{$name}-border);

        &:hover {
            border-color: var(--subtle-#{$name}-border-hover);
        }
    }

    .subtle-#{$name},
    .surface-#{$name} {
        background-color: var(--subtle-#{$name}-background);
        color: var(--#{$name}-text-over-subtle);

        &:hover {
            background-color: var(--subtle-#{$name}-background-hover);
            color: var(--#{$name}-text-over-subtle);
        }
    }

    .solid-#{$name} {
        background-color: var(--#{$name});
        color: var(--#{$name}-text-over);

        &:hover {
            background-color: var(--#{$name}-hover);
            color: var(--#{$name}-text-over);
        }
    }

    .ghost-#{$name} {
        &:hover {
            background-color: var(--subtle-#{$name}-background);
            color: var(--#{$name}-text-over-subtle);
        }
    }
}

--background: #{$background};
--foreground: #{$foreground};
}